/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package MMS.gui;

import MMS.helperFunctions.CropsDB;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author mike.herder
 */
public class addCrop extends javax.swing.JFrame {
    public String Directory = "";
    CropsDB cDB = new CropsDB();
    private List <String> CropType = new ArrayList();
    List <String> growthStages = new ArrayList();
    public boolean loading = false;
    
    /**
     * Creates new form addCrop
     */
    public addCrop(String location) {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        phyllochron.setText("1");
        Directory = location;
    }
    
    @SuppressWarnings("empty-statement")
    public addCrop() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        phyllochron.setText("1");
        Directory = "E:\\PhenologyMMS 1.3\\";
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        automateSelection = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        AddCropType = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        columnName2 = new javax.swing.JTextField();
        columnName18 = new javax.swing.JTextField();
        columnName13 = new javax.swing.JTextField();
        columnName8 = new javax.swing.JTextField();
        columnName15 = new javax.swing.JTextField();
        columnName5 = new javax.swing.JTextField();
        columnName14 = new javax.swing.JTextField();
        columnName0 = new javax.swing.JTextField();
        columnName17 = new javax.swing.JTextField();
        columnName4 = new javax.swing.JTextField();
        columnName7 = new javax.swing.JTextField();
        columnName3 = new javax.swing.JTextField();
        columnName19 = new javax.swing.JTextField();
        columnName16 = new javax.swing.JTextField();
        columnName6 = new javax.swing.JTextField();
        columnName11 = new javax.swing.JTextField();
        columnName10 = new javax.swing.JTextField();
        columnName12 = new javax.swing.JTextField();
        columnName9 = new javax.swing.JTextField();
        columnName1 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cropTypeField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cropTable = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cropDateField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        smField = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        depthField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        rateField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        maxCanopyField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        baseTempField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        loTempField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        uoTempField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        umTempField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        gddField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        gddLeafField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        checkBox = new javax.swing.JCheckBox();
        DIY = new javax.swing.JRadioButton();
        Automate = new javax.swing.JRadioButton();
        status = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        wfpsloLabel = new javax.swing.JLabel();
        wfpsupLabel = new javax.swing.JLabel();
        germgddLabel = new javax.swing.JLabel();
        ergddLabel = new javax.swing.JLabel();
        wfpsloField = new javax.swing.JTextField();
        germgddField = new javax.swing.JTextField();
        wfpsupField = new javax.swing.JTextField();
        ergddField = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        wfpsloLabel1 = new javax.swing.JLabel();
        wfpsloField1 = new javax.swing.JTextField();
        wfpsupLabel1 = new javax.swing.JLabel();
        wfpsupField1 = new javax.swing.JTextField();
        germgddLabel1 = new javax.swing.JLabel();
        germgddField1 = new javax.swing.JTextField();
        ergddLabel1 = new javax.swing.JLabel();
        ergddField1 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        wfpsloLabel2 = new javax.swing.JLabel();
        wfpsloField2 = new javax.swing.JTextField();
        wfpsupLabel2 = new javax.swing.JLabel();
        wfpsupField2 = new javax.swing.JTextField();
        germgddLabel2 = new javax.swing.JLabel();
        germgddField2 = new javax.swing.JTextField();
        ergddLabel2 = new javax.swing.JLabel();
        ergddField2 = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        wfpsloLabel3 = new javax.swing.JLabel();
        wfpsloField3 = new javax.swing.JTextField();
        wfpsupLabel3 = new javax.swing.JLabel();
        wfpsupField3 = new javax.swing.JTextField();
        germgddLabel3 = new javax.swing.JLabel();
        germgddField3 = new javax.swing.JTextField();
        ergddLabel3 = new javax.swing.JLabel();
        ergddField3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        addCropVariety = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cropType = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cropVarietyField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        gddNS0 = new javax.swing.JTextField();
        gddS0 = new javax.swing.JTextField();
        gddNS1 = new javax.swing.JTextField();
        gddS1 = new javax.swing.JTextField();
        gddNS2 = new javax.swing.JTextField();
        gddS2 = new javax.swing.JTextField();
        gddNS3 = new javax.swing.JTextField();
        gddS3 = new javax.swing.JTextField();
        gddNS4 = new javax.swing.JTextField();
        gddS4 = new javax.swing.JTextField();
        gddNS5 = new javax.swing.JTextField();
        gddS5 = new javax.swing.JTextField();
        gddS6 = new javax.swing.JTextField();
        gddNS6 = new javax.swing.JTextField();
        gddS7 = new javax.swing.JTextField();
        gddNS7 = new javax.swing.JTextField();
        gddNS8 = new javax.swing.JTextField();
        gddS8 = new javax.swing.JTextField();
        gddS9 = new javax.swing.JTextField();
        gddNS9 = new javax.swing.JTextField();
        gddNS10 = new javax.swing.JTextField();
        gddS10 = new javax.swing.JTextField();
        gddNS11 = new javax.swing.JTextField();
        gddS11 = new javax.swing.JTextField();
        gddS12 = new javax.swing.JTextField();
        gddNS12 = new javax.swing.JTextField();
        gddS13 = new javax.swing.JTextField();
        gddNS13 = new javax.swing.JTextField();
        gddNS14 = new javax.swing.JTextField();
        gddS14 = new javax.swing.JTextField();
        gddNS15 = new javax.swing.JTextField();
        gddS15 = new javax.swing.JTextField();
        gddNS16 = new javax.swing.JTextField();
        gddS16 = new javax.swing.JTextField();
        gddNS17 = new javax.swing.JTextField();
        gddS17 = new javax.swing.JTextField();
        gddNS18 = new javax.swing.JTextField();
        gddS18 = new javax.swing.JTextField();
        gddNS19 = new javax.swing.JTextField();
        gddS19 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        nolNS0 = new javax.swing.JTextField();
        nolS0 = new javax.swing.JTextField();
        nolNS1 = new javax.swing.JTextField();
        nolS1 = new javax.swing.JTextField();
        nolS2 = new javax.swing.JTextField();
        nolNS2 = new javax.swing.JTextField();
        nolS3 = new javax.swing.JTextField();
        nolNS3 = new javax.swing.JTextField();
        nolNS4 = new javax.swing.JTextField();
        nolS4 = new javax.swing.JTextField();
        nolS5 = new javax.swing.JTextField();
        nolNS5 = new javax.swing.JTextField();
        nolS6 = new javax.swing.JTextField();
        nolNS6 = new javax.swing.JTextField();
        nolS7 = new javax.swing.JTextField();
        nolNS7 = new javax.swing.JTextField();
        nolNS8 = new javax.swing.JTextField();
        nolS8 = new javax.swing.JTextField();
        nolNS9 = new javax.swing.JTextField();
        nolS9 = new javax.swing.JTextField();
        nolS10 = new javax.swing.JTextField();
        nolNS10 = new javax.swing.JTextField();
        nolNS11 = new javax.swing.JTextField();
        nolS11 = new javax.swing.JTextField();
        nolS12 = new javax.swing.JTextField();
        nolNS12 = new javax.swing.JTextField();
        nolS13 = new javax.swing.JTextField();
        nolNS13 = new javax.swing.JTextField();
        nolNS14 = new javax.swing.JTextField();
        nolS14 = new javax.swing.JTextField();
        nolS15 = new javax.swing.JTextField();
        nolNS15 = new javax.swing.JTextField();
        nolS16 = new javax.swing.JTextField();
        nolNS16 = new javax.swing.JTextField();
        nolNS17 = new javax.swing.JTextField();
        nolS17 = new javax.swing.JTextField();
        nolS18 = new javax.swing.JTextField();
        nolNS18 = new javax.swing.JTextField();
        nolNS19 = new javax.swing.JTextField();
        nolS19 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        nDays = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        bTemp = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        loTemp = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        uoTemp = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        mTemp = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        dTemp = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        gddMethod = new javax.swing.JTextField();
        P1D = new javax.swing.JTextField();
        P1DT = new javax.swing.JTextField();
        canopyHt = new javax.swing.JTextField();
        columnName20 = new javax.swing.JLabel();
        columnName21 = new javax.swing.JLabel();
        columnName22 = new javax.swing.JLabel();
        columnName23 = new javax.swing.JLabel();
        columnName24 = new javax.swing.JLabel();
        columnName25 = new javax.swing.JLabel();
        columnName26 = new javax.swing.JLabel();
        columnName27 = new javax.swing.JLabel();
        columnName28 = new javax.swing.JLabel();
        columnName29 = new javax.swing.JLabel();
        columnName30 = new javax.swing.JLabel();
        columnName31 = new javax.swing.JLabel();
        columnName32 = new javax.swing.JLabel();
        columnName33 = new javax.swing.JLabel();
        columnName34 = new javax.swing.JLabel();
        columnName35 = new javax.swing.JLabel();
        columnName36 = new javax.swing.JLabel();
        columnName37 = new javax.swing.JLabel();
        columnName38 = new javax.swing.JLabel();
        columnName39 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        phyllochron = new javax.swing.JTextField();
        status1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        AddCropType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AddCropType.setText("Add");
        AddCropType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCropTypeActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Growth Stage Names", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(columnName0, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(columnName1)
                    .addComponent(columnName2)
                    .addComponent(columnName3)
                    .addComponent(columnName4)
                    .addComponent(columnName5)
                    .addComponent(columnName6)
                    .addComponent(columnName7)
                    .addComponent(columnName8)
                    .addComponent(columnName9)
                    .addComponent(columnName10)
                    .addComponent(columnName11)
                    .addComponent(columnName12)
                    .addComponent(columnName13)
                    .addComponent(columnName14)
                    .addComponent(columnName15)
                    .addComponent(columnName16)
                    .addComponent(columnName17)
                    .addComponent(columnName18)
                    .addComponent(columnName19, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {columnName0, columnName1, columnName10, columnName11, columnName12, columnName13, columnName14, columnName15, columnName16, columnName17, columnName18, columnName19, columnName2, columnName3, columnName4, columnName5, columnName6, columnName7, columnName8, columnName9});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(columnName0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnName19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {columnName0, columnName1, columnName10, columnName11, columnName12, columnName13, columnName14, columnName15, columnName16, columnName17, columnName18, columnName19, columnName2, columnName3, columnName4, columnName5, columnName6, columnName7, columnName8, columnName9});

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Plant Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Add Crop Type:");

        cropTypeField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cropTypeField.setToolTipText("ex: corn, beans, melons, etc..");
        cropTypeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cropTypeFieldActionPerformed(evt);
            }
        });
        cropTypeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cropTypeFieldFocusLost(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Crop Table Name:");

        cropTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cropTable.setToolTipText("This is your new table name");
        cropTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Planting Date:");

        cropDateField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cropDateField.setText("mm/dd/yyyy");
        cropDateField.setToolTipText("mm/dd/yyyy");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Soil Moisture:");

        smField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Optimum", "Medium", "Dry", "Planted in Dust" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Planting Depth (cm):");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Rate:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Max Canopy Ht.:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Base Temp:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Lower Optimum Temp:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Upper Optimum Temp:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Upper/Max Temp:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("GDD Method:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("GDD / Leaf :");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cropTypeField)
                    .addComponent(cropDateField)
                    .addComponent(cropTable, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                    .addComponent(smField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(depthField)
                    .addComponent(rateField)
                    .addComponent(maxCanopyField)
                    .addComponent(baseTempField)
                    .addComponent(loTempField)
                    .addComponent(uoTempField)
                    .addComponent(umTempField)
                    .addComponent(gddField)
                    .addComponent(gddLeafField))
                .addContainerGap())
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {baseTempField, cropDateField, cropTable, cropTypeField, depthField, gddField, gddLeafField, loTempField, maxCanopyField, rateField, umTempField, uoTempField});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cropTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cropTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cropDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(15, 15, 15)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(smField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(depthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(rateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(maxCanopyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(baseTempField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(loTempField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(uoTempField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(umTempField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(gddField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(gddLeafField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {baseTempField, cropDateField, cropTable, cropTypeField, depthField, gddField, gddLeafField, jLabel2, loTempField, maxCanopyField, rateField, umTempField, uoTempField});

        jLabel20.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 51, 51));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("All Fields Must Be Filled Out");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Automate GDD", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        checkBox.setText("Vernalization Needed");
        checkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxActionPerformed(evt);
            }
        });

        automateSelection.add(DIY);
        DIY.setSelected(true);
        DIY.setText("Do It Yourself");
        DIY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DIYActionPerformed(evt);
            }
        });

        automateSelection.add(Automate);
        Automate.setText("Automate");
        Automate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutomateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DIY)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Automate)
                        .addGap(30, 30, 30)
                        .addComponent(checkBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(DIY)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Automate)
                    .addComponent(checkBox)))
        );

        status.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Emergence Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Optimum", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel10.setMinimumSize(new java.awt.Dimension(201, 146));
        jPanel10.setPreferredSize(new java.awt.Dimension(201, 100));

        wfpsloLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        wfpsloLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        wfpsloLabel.setText("wfpslo");

        wfpsupLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        wfpsupLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        wfpsupLabel.setText("wfpsup");

        germgddLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        germgddLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        germgddLabel.setText("germgdd");

        ergddLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ergddLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ergddLabel.setText("ergdd");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wfpsloLabel)
                    .addComponent(wfpsupLabel)
                    .addComponent(germgddLabel)
                    .addComponent(ergddLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wfpsloField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wfpsupField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(germgddField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ergddField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ergddLabel, germgddLabel, wfpsloLabel, wfpsupLabel});

        jPanel10Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ergddField, germgddField, wfpsloField, wfpsupField});

        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wfpsloLabel)
                    .addComponent(wfpsloField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wfpsupLabel)
                    .addComponent(wfpsupField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(germgddLabel)
                    .addComponent(germgddField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ergddLabel)
                    .addComponent(ergddField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ergddField, germgddField, wfpsloField, wfpsloLabel, wfpsupField});

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Medium", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel11.setMinimumSize(new java.awt.Dimension(201, 146));

        wfpsloLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        wfpsloLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        wfpsloLabel1.setText("wfpslo");

        wfpsupLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        wfpsupLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        wfpsupLabel1.setText("wfpsup");

        germgddLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        germgddLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        germgddLabel1.setText("germgdd");

        ergddLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ergddLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ergddLabel1.setText("ergdd");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wfpsloLabel1)
                    .addComponent(wfpsupLabel1)
                    .addComponent(germgddLabel1)
                    .addComponent(ergddLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wfpsupField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wfpsloField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(germgddField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ergddField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ergddField1, germgddField1, wfpsloField1, wfpsupField1});

        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wfpsloLabel1)
                    .addComponent(wfpsloField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wfpsupLabel1)
                    .addComponent(wfpsupField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(germgddLabel1)
                    .addComponent(germgddField1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ergddField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ergddLabel1))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ergddField1, ergddLabel1, germgddLabel1, wfpsloField1, wfpsloLabel1, wfpsupField1, wfpsupLabel1});

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel12.setMinimumSize(new java.awt.Dimension(201, 146));

        wfpsloLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        wfpsloLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        wfpsloLabel2.setText("wfpslo");

        wfpsupLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        wfpsupLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        wfpsupLabel2.setText("wfpsup");

        germgddLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        germgddLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        germgddLabel2.setText("germgdd");

        ergddLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ergddLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ergddLabel2.setText("ergdd");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wfpsloLabel2)
                    .addComponent(wfpsupLabel2)
                    .addComponent(germgddLabel2)
                    .addComponent(ergddLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wfpsupField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wfpsloField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(germgddField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ergddField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wfpsloLabel2)
                    .addComponent(wfpsloField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wfpsupLabel2)
                    .addComponent(wfpsupField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(germgddLabel2)
                    .addComponent(germgddField2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ergddField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ergddLabel2))
                .addContainerGap())
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Planted In Dust", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel13.setMinimumSize(new java.awt.Dimension(201, 146));

        wfpsloLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        wfpsloLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        wfpsloLabel3.setText("wfpslo");

        wfpsupLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        wfpsupLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        wfpsupLabel3.setText("wfpsup");

        germgddLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        germgddLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        germgddLabel3.setText("germgdd");

        ergddLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ergddLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ergddLabel3.setText("ergdd");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wfpsloLabel3)
                    .addComponent(wfpsupLabel3)
                    .addComponent(germgddLabel3)
                    .addComponent(ergddLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wfpsupField3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wfpsloField3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(germgddField3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ergddField3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wfpsloLabel3)
                    .addComponent(wfpsloField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wfpsupLabel3)
                    .addComponent(wfpsupField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(germgddLabel3)
                    .addComponent(germgddField3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ergddField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ergddLabel3))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel10, jPanel11, jPanel12, jPanel13});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(AddCropType)))
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(AddCropType)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add Crop Type", jPanel2);

        addCropVariety.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addCropVariety.setText("Add");
        addCropVariety.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCropVarietyActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Choose Crop Type:");

        cropType.setMaximumRowCount(15);
        cropType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cropTypeActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Add Crop Variety:");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "GDD", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(157, 585));

        gddNS0.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS0FocusLost(evt);
            }
        });

        gddS0.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS0FocusLost(evt);
            }
        });

        gddNS1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS1FocusLost(evt);
            }
        });

        gddS1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS1FocusLost(evt);
            }
        });

        gddNS2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS2FocusLost(evt);
            }
        });

        gddS2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS2FocusLost(evt);
            }
        });

        gddNS3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS3FocusLost(evt);
            }
        });

        gddS3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS3FocusLost(evt);
            }
        });

        gddNS4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS4FocusLost(evt);
            }
        });

        gddS4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS4FocusLost(evt);
            }
        });

        gddNS5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS5FocusLost(evt);
            }
        });

        gddS5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS5FocusLost(evt);
            }
        });

        gddS6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS6FocusLost(evt);
            }
        });

        gddNS6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS6FocusLost(evt);
            }
        });

        gddS7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS7FocusLost(evt);
            }
        });

        gddNS7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS7FocusLost(evt);
            }
        });

        gddNS8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS8FocusLost(evt);
            }
        });

        gddS8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS8FocusLost(evt);
            }
        });

        gddS9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS9FocusLost(evt);
            }
        });

        gddNS9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS9FocusLost(evt);
            }
        });

        gddNS10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS10FocusLost(evt);
            }
        });

        gddS10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS10FocusLost(evt);
            }
        });

        gddNS11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS11FocusLost(evt);
            }
        });

        gddS11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS11FocusLost(evt);
            }
        });

        gddS12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS12FocusLost(evt);
            }
        });

        gddNS12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS12FocusLost(evt);
            }
        });

        gddS13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS13FocusLost(evt);
            }
        });

        gddNS13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS13FocusLost(evt);
            }
        });

        gddNS14.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS14FocusLost(evt);
            }
        });

        gddS14.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS14FocusLost(evt);
            }
        });

        gddNS15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS15FocusLost(evt);
            }
        });

        gddS15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS15FocusLost(evt);
            }
        });

        gddNS16.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS16FocusLost(evt);
            }
        });

        gddS16.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS16FocusLost(evt);
            }
        });

        gddNS17.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS17FocusLost(evt);
            }
        });

        gddS17.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS17FocusLost(evt);
            }
        });

        gddNS18.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS18FocusLost(evt);
            }
        });

        gddS18.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS18FocusLost(evt);
            }
        });

        gddNS19.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddNS19FocusLost(evt);
            }
        });

        gddS19.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gddS19FocusLost(evt);
            }
        });

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("No Stress");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Stressed");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS13, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS13, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS14, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS14, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS15, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS15, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS16, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS16, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS17, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS17, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS18, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS18, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(gddNS19, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gddS19, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(gddNS0, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(gddS0, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {gddNS0, gddNS1, gddNS10, gddNS11, gddNS12, gddNS13, gddNS14, gddNS15, gddNS16, gddNS17, gddNS18, gddNS19, gddNS2, gddNS3, gddNS4, gddNS5, gddNS6, gddNS7, gddNS8, gddNS9, gddS0, gddS1, gddS10, gddS11, gddS12, gddS13, gddS14, gddS15, gddS16, gddS17, gddS18, gddS19, gddS2, gddS3, gddS4, gddS5, gddS6, gddS7, gddS8, gddS9});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gddS0, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddNS0, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gddNS19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gddS19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {gddNS0, gddNS1, gddNS10, gddNS11, gddNS12, gddNS13, gddNS14, gddNS15, gddNS16, gddNS17, gddNS18, gddNS19, gddNS2, gddNS3, gddNS4, gddNS5, gddNS6, gddNS7, gddNS8, gddNS9, gddS0, gddS1, gddS10, gddS11, gddS12, gddS13, gddS14, gddS15, gddS16, gddS17, gddS18, gddS19, gddS2, gddS3, gddS4, gddS5, gddS6, gddS7, gddS8, gddS9});

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Number of Leaves", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Stressed");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("No Stress");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS13, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS13, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS14, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS14, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS15, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS15, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS16, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS16, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS17, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS17, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS18, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS18, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nolNS19, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nolS19, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nolNS0, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nolS0, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {nolNS0, nolNS1, nolNS10, nolNS11, nolNS12, nolNS13, nolNS14, nolNS15, nolNS16, nolNS17, nolNS18, nolNS19, nolNS2, nolNS3, nolNS4, nolNS5, nolNS6, nolNS7, nolNS8, nolNS9, nolS0, nolS1, nolS10, nolS11, nolS12, nolS13, nolS14, nolS15, nolS16, nolS17, nolS18, nolS19, nolS2, nolS3, nolS4, nolS5, nolS6, nolS7, nolS8, nolS9});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addGap(15, 15, 15)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS0, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS0, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nolNS19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nolS19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {nolNS0, nolNS1, nolNS10, nolNS11, nolNS12, nolNS13, nolNS14, nolNS15, nolNS16, nolNS17, nolNS18, nolNS19, nolNS2, nolNS3, nolNS4, nolNS5, nolNS6, nolNS7, nolNS8, nolNS9, nolS0, nolS1, nolS10, nolS11, nolS12, nolS13, nolS14, nolS15, nolS16, nolS17, nolS18, nolS19, nolS2, nolS3, nolS4, nolS5, nolS6, nolS7, nolS8, nolS9});

        jLabel21.setForeground(new java.awt.Color(255, 51, 51));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Automatically Populates Data");

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Vernalization Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("# of Vernal. Days:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Base Temp:");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Lower Optimum Temp:");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Upper Optimum Temp:");

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("Max Temp:");

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Devernalization Temp:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nDays, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bTemp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(loTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(uoTemp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mTemp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dTemp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, jLabel27});

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bTemp, dTemp, loTemp, mTemp, nDays, uoTemp});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(nDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(bTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(loTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(uoTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(mTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(dTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel22, jLabel23, jLabel24, jLabel25, jLabel26, jLabel27});

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bTemp, dTemp, loTemp, mTemp, nDays, uoTemp});

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Additional Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("GDD Method:");

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("P1D:");

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("P1DT:");

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Canopy Ht:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(P1D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(P1DT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(canopyHt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(gddMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel28, jLabel29, jLabel30, jLabel31});

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {P1D, P1DT, canopyHt, gddMethod});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(gddMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(P1D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(P1DT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(canopyHt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {P1D, P1DT, canopyHt, gddMethod, jLabel28, jLabel29, jLabel30, jLabel31});

        columnName20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName29.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName30.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName33.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName34.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName35.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName36.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName36.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName37.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName37.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName38.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName38.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        columnName39.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        columnName39.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel32.setText("Phyllochron");

        status1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        status1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addCropVariety)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(columnName20, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName21, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName22, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName23, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName24, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName25, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName26, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName27, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName29, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName28, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName30, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName31, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName32, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName33, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName34, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName35, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName36, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName37, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName38, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(columnName39, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cropType, 0, 113, Short.MAX_VALUE)
                                    .addComponent(cropVarietyField))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phyllochron, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 89, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(status1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cropType, cropVarietyField});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {columnName20, columnName21, columnName22, columnName23, columnName24, columnName25, columnName26, columnName27, columnName28, columnName29, columnName30, columnName31, columnName32, columnName33, columnName34, columnName35, columnName36, columnName37, columnName38, columnName39});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cropType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cropVarietyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(phyllochron, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(49, 49, 49)
                            .addComponent(columnName20, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName21, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName22, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName23, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName24, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName25, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName26, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName27, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName28, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName29, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName30, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName31, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName32, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName33, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName34, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName35, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName36, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName37, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName38, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(columnName39, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(status1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(addCropVariety)
                .addGap(11, 11, 11))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {columnName20, columnName21, columnName22, columnName23, columnName24, columnName25, columnName26, columnName27, columnName28, columnName29, columnName30, columnName31, columnName32, columnName33, columnName34, columnName35, columnName36, columnName37, columnName38, columnName39});

        jTabbedPane1.addTab("Add Crop Variety", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AutomateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutomateActionPerformed
        columnName0.setText("Planting to Emergence");
        if (!checkBox.isSelected())
            columnName1.setText("E to Growing Point Differentiation");
        else
            columnName1.setText("Vernalized to Growing Point Differentiation");

        columnName2.setText("GPD to Flowering");
        columnName3.setText("Flowering to Physiological Maturity");
        columnName4.setText("PM to Harvest Ready");

        columnName5.setEnabled(false);
        columnName5.setText(null);
        columnName6.setEnabled(false);
        columnName6.setText(null);
        columnName7.setEnabled(false);
        columnName7.setText(null);
        columnName8.setEnabled(false);
        columnName8.setText(null);
        columnName9.setEnabled(false);
        columnName9.setText(null);
        columnName10.setEnabled(false);
        columnName10.setText(null);
        columnName11.setEnabled(false);
        columnName11.setText(null);
        columnName12.setEnabled(false);
        columnName12.setText(null);
        columnName13.setEnabled(false);
        columnName13.setText(null);
        columnName14.setEnabled(false);
        columnName14.setText(null);
        columnName15.setEnabled(false);
        columnName15.setText(null);
        columnName16.setEnabled(false);
        columnName16.setText(null);
        columnName17.setEnabled(false);
        columnName17.setText(null);
        columnName18.setEnabled(false);
        columnName18.setText(null);
        columnName19.setEnabled(false);
        columnName19.setText(null);

    }//GEN-LAST:event_AutomateActionPerformed

    private void DIYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DIYActionPerformed
        columnName5.setEnabled(true);
        columnName6.setEnabled(true);
        columnName7.setEnabled(true);
        columnName8.setEnabled(true);
        columnName9.setEnabled(true);
        columnName10.setEnabled(true);
        columnName11.setEnabled(true);
        columnName12.setEnabled(true);
        columnName13.setEnabled(true);
        columnName14.setEnabled(true);
        columnName15.setEnabled(true);
        columnName16.setEnabled(true);
        columnName17.setEnabled(true);
        columnName18.setEnabled(true);
        columnName19.setEnabled(true);
        
        checkBox.setSelected(false);
        
        columnName0.setText(null);
        columnName1.setText(null);
        columnName2.setText(null);
        columnName3.setText(null);
        columnName4.setText(null);
    }//GEN-LAST:event_DIYActionPerformed

    private void checkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxActionPerformed
        if (!checkBox.isSelected())
            columnName1.setText("E to Growing Point Differentiation");
        else
            columnName1.setText("Vernalized to Growing Point Differentiation");
    }//GEN-LAST:event_checkBoxActionPerformed

    private void cropTypeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cropTypeFieldActionPerformed
        String tableName = cropTypeField.getText().replaceAll("\\s+","");
        
        if (tableName.endsWith("s"))
            tableName = tableName.substring(0, tableName.length()-1);
        
        if (cropTypeField.getText().length() > 0)
            cropTable.setText(tableName + "Types");
        else
            cropTable.setText(null);
    }//GEN-LAST:event_cropTypeFieldActionPerformed

    private void cropTypeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cropTypeFieldFocusLost
         String tableName = cropTypeField.getText().replaceAll("\\s+","");
        
        if (tableName.endsWith("s"))
            tableName = tableName.substring(0, tableName.length()-1);
        
        if (cropTypeField.getText().length() > 0)
            cropTable.setText(tableName + "Types");
        else
            cropTable.setText(null);
    }//GEN-LAST:event_cropTypeFieldFocusLost

    private void AddCropTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCropTypeActionPerformed
        
        List <String> columns = new ArrayList();
        List <String> data = new ArrayList();
        boolean hasErrors = false;
        boolean AddRow = false;
        boolean AddTable = false;
       
        hasErrors = PlantInformationErrorChecking();
        
        if (!hasErrors){
            //Adding new crop information to _CropTypes Table
            columns.add("CropType");
            columns.add("cropTable");
            columns.add("Crop Date");
            columns.add("Soil Moisture");
            columns.add("Depth");
            columns.add("Rate");
            columns.add("Max Canopy Ht");
            columns.add("Base");
            columns.add("Lower Optimum");
            columns.add("Upper Optimum");
            columns.add("Upper/Maximum");
            columns.add("GDD Method");
            columns.add("Growing Degree-Days Per Leaf");   
            columns.add("Optimum-wfpslo");
            columns.add("Optimum-wfpsup");
            columns.add("Optimum-germgdd");
            columns.add("Optimum-ergdd");
            columns.add("Medium-wfpslo");
            columns.add("Medium-wfpsup");
            columns.add("Medium-germgdd");
            columns.add("Medium-ergdd");
            columns.add("Dry-wfpslo");
            columns.add("Dry-wfpsup");
            columns.add("Dry-germgdd");
            columns.add("Dry-ergdd");
            columns.add("PID-wfpslo");
            columns.add("PID-wfpsup");
            columns.add("PID-germgdd");
            columns.add("PID-ergdd");

            
            

            data.add(cropTypeField.getText());
            data.add(cropTable.getText());
            data.add(cropDateField.getText());
            data.add(smField.getSelectedItem().toString());
            data.add(depthField.getText());
            data.add(rateField.getText());
            data.add(maxCanopyField.getText());
            data.add(baseTempField.getText());
            data.add(loTempField.getText());
            data.add(uoTempField.getText());
            data.add(umTempField.getText());
            data.add(gddField.getText());
            data.add(gddLeafField.getText());
            data.add(wfpsloField.getText());
            data.add(wfpsupField.getText());
            data.add(germgddField.getText());
            data.add(ergddField.getText());
            data.add(wfpsloField1.getText());
            data.add(wfpsupField1.getText());
            data.add(germgddField1.getText());
            data.add(ergddField1.getText());
            data.add(wfpsloField2.getText());
            data.add(wfpsupField2.getText());
            data.add(germgddField2.getText());
            data.add(ergddField2.getText());
            data.add(wfpsloField3.getText());
            data.add(wfpsupField3.getText());
            data.add(germgddField3.getText());
            data.add(ergddField3.getText());

            try {
                AddRow = cDB.addRowToTable(Directory,"_CropTypes" ,columns, data);
            } catch (SQLException ex) {
                Logger.getLogger(addCrop.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Error 1000.1: Data was not added to database", "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        //Creating a new Table for the new Crop
        if (AddRow){
            data.removeAll(data);

            data.add(cropTable.getText());
            data.add(cropTable.getText().substring(0, cropTable.getText().length()-1));

            if (columnName0.getText().length() > 0)
                data.add("GDD_NS_" + columnName0.getText());
            if (columnName1.getText().length() > 0)
                data.add("GDD_NS_" + columnName1.getText());
            if (columnName2.getText().length() > 0)
                data.add("GDD_NS_" + columnName2.getText());
            if (columnName3.getText().length() > 0)
                data.add("GDD_NS_" + columnName3.getText());
            if (columnName4.getText().length() > 0)
                data.add("GDD_NS_" + columnName4.getText());
            
            if (!Automate.isSelected()){
                if (columnName5.getText().length() > 0)
                    data.add("GDD_NS_" + columnName5.getText());
                if (columnName6.getText().length() > 0)
                    data.add("GDD_NS_" + columnName6.getText());
                if (columnName7.getText().length() > 0)
                    data.add("GDD_NS_" + columnName7.getText());
                if (columnName8.getText().length() > 0)
                    data.add("GDD_NS_" + columnName8.getText());
                if (columnName9.getText().length() > 0)
                    data.add("GDD_NS_" + columnName9.getText());
                if (columnName10.getText().length() > 0)
                    data.add("GDD_NS_" + columnName10.getText());
                if (columnName11.getText().length() > 0)
                    data.add("GDD_NS_" + columnName11.getText());
                if (columnName12.getText().length() > 0)
                    data.add("GDD_NS_" + columnName12.getText());
                if (columnName13.getText().length() > 0)
                    data.add("GDD_NS_" + columnName13.getText());
                if (columnName14.getText().length() > 0)
                    data.add("GDD_NS_" + columnName14.getText());
                if (columnName15.getText().length() > 0)
                    data.add("GDD_NS_" + columnName15.getText());
                if (columnName16.getText().length() > 0)
                    data.add("GDD_NS_" + columnName16.getText());
                if (columnName17.getText().length() > 0)
                    data.add("GDD_NS_" + columnName17.getText());
                if (columnName18.getText().length() > 0)
                    data.add("GDD_NS_" + columnName18.getText());
                if (columnName19.getText().length() > 0)
                    data.add("GDD_NS_" + columnName19.getText());
            }
            //This loop will cycle to create the other 3 Categories (GDD Stressed and NoL NS and NoL Streess)
            
            for (int i = 0; i < data.size(); i ++){
                if (data.get(i).contains("GDD_NS_")){
                    data.add("GDD_S_" + data.get(i).split("_")[2]);
                }
                else if (data.get(i).contains("GDD_S_")){
                    data.add("NoL_NS_" + data.get(i).split("_")[2]);
                }
                else if (data.get(i).contains("NoL_NS_")){
                    data.add("NoL_S_" + data.get(i).split("_")[2]);
                }
            }
            
            data.add("Number of Vernalization Days");
            data.add("Vernalization Base Temp");
            data.add("Vernalization Lower Optimum");
            data.add("Vernalization Upper Optimum");
            data.add("Vernalization Max Temp");
            data.add("Devernalization Temp");
            data.add("GDD Method");
            data.add("P1D");
            data.add("P1DT");
            data.add("Canopy Ht");
            data.add("Phyllochron");

            try {
               AddTable = cDB.createTable(Directory, data);
            } catch (SQLException ex) {
                Logger.getLogger(addCrop.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Error 1001.1: Unable to Create Table in Crop Database", "Database Error", JOptionPane.ERROR_MESSAGE);
            }
            
            if (!AddTable || !AddRow){
                status.setForeground(Color.red);
                status.setText("Adding Crop Type FAILED");
            }
            else{
                status.setForeground(Color.GREEN);
                status.setText("Adding Crop Type SUCCEEDED");
            }
        }
    }//GEN-LAST:event_AddCropTypeActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged

        
        
        if (jTabbedPane1.getSelectedIndex() == 1){
            loading = true;
            cropType.removeAllItems();
           
            /*
            * Getting crop types to populate information.
            * This will populate "Choose Crop:" Drop Down menu
            */
            try{
                CropType = cDB.readOneColumnFromDB(Directory, "_CropTypes", "CropType", 0);
            }catch(Exception ex){
                JOptionPane.showMessageDialog(rootPane, "Error 101.3: Unable to retrieve Column of Data from crops database", "Database Error", JOptionPane.ERROR_MESSAGE);
            }

//            Collections.sort(CropType, new Comparator<String>(){
//                                public int compare(String s1, String s2){
//                                    return s1.compareToIgnoreCase(s2);
//                                   
//                                }});
//            
            Iterator itr = CropType.iterator();
            while (itr.hasNext()){
                try{
                    cropType.addItem(itr.next().toString());
                }catch(NullPointerException ex){
                    JOptionPane.showMessageDialog(rootPane, "Error 900.4: Null Pointer Exceptions", "Field Error", JOptionPane.ERROR_MESSAGE);
                }

            }
            
            //Getting table name            
            try {
                CropType = cDB.readOneRowFromDB(Directory, "_CropTypes","CropType", (String)cropType.getSelectedItem());
            } catch (IOException | SQLException ex) {
                Logger.getLogger(addCrop.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Error 100.4: Unable to Read Row from crops database", "Database Error", JOptionPane.ERROR_MESSAGE);
            }

            //Retrieving Growth Stage Information
            try {
                growthStages = cDB.getColumnHeaders(Directory, CropType.get(1));
            } catch (IOException ex) {
                Logger.getLogger(addCrop.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Error 102.2: Unable to retrieve Column Headers from crops database", "Database Error", JOptionPane.ERROR_MESSAGE);
            }
            
            //Displaying Growth Stages on the screen
            setGrowthStageNames(growthStages);
        }
        loading = false;
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void addCropVarietyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCropVarietyActionPerformed
        boolean AddRow = false;

        //Finding out the Table Name for the current Selected crop
        try{
            CropType = cDB.readOneRowFromDB(Directory, "_CropTypes" ,"CropType", (String)cropType.getSelectedItem());
        }catch (IOException | SQLException ex) {
            Logger.getLogger(addCrop.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Error 100.5: Unable to Read Row from crops database", "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        
        //Adding data to table
        try {
            if (!checkingInsertedData())
                AddRow = cDB.addRowToTable(Directory,CropType.get(1),growthStages, getGrowthStageValues());
        } catch (SQLException ex) {
            Logger.getLogger(addCrop.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Error 1000.2: Data was not added to database", "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        
        if (AddRow){
            status.setForeground(Color.GREEN);
            status1.setText("Successfully added Crop Variety");
        }else{
            status.setForeground(Color.red);
            status1.setText("Failed to Add to Crop Variety");
        }
    }//GEN-LAST:event_addCropVarietyActionPerformed

    private void cropTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cropTypeActionPerformed
        if (loading == false){
            //Getting table name            
            try {
                CropType = cDB.readOneRowFromDB(Directory, "_CropTypes","CropType", (String)cropType.getSelectedItem());
            } catch (IOException | SQLException ex) {
                Logger.getLogger(addCrop.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Error 100.6: Unable to Read Row from crops database", "Database Error", JOptionPane.ERROR_MESSAGE);
            }

            //Retrieving Growth Stage Information
            try {
                growthStages = cDB.getColumnHeaders(Directory, CropType.get(1));

            } catch (IOException ex) {
                Logger.getLogger(addCrop.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Error 102.3: Unable to retrieve Column Headers from crops database", "Database Error", JOptionPane.ERROR_MESSAGE);
            }

            //Displaying Growth Stages on the screen
            setGrowthStageNames(growthStages);
        }
    }//GEN-LAST:event_cropTypeActionPerformed

    private void gddNS0FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS0FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS0.setText(Double.toString(Double.parseDouble(gddNS0.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS0FocusLost

    private void gddNS1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS1FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS1.setText(Double.toString(Double.parseDouble(gddNS1.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS1FocusLost

    private void gddNS2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS2FocusLost
      if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS2.setText(Double.toString(Double.parseDouble(gddNS2.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS2FocusLost

    private void gddNS4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS4FocusLost
       if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS4.setText(Double.toString(Double.parseDouble(gddNS4.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS4FocusLost

    private void gddNS5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS5FocusLost
       if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS5.setText(Double.toString(Double.parseDouble(gddNS5.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS5FocusLost

    private void gddNS6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS6FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS6.setText(Double.toString(Double.parseDouble(gddNS6.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS6FocusLost

    private void gddNS7FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS7FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS7.setText(Double.toString(Double.parseDouble(gddNS7.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS7FocusLost

    private void gddNS8FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS8FocusLost
       if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS8.setText(Double.toString(Double.parseDouble(gddNS8.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS8FocusLost

    private void gddNS9FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS9FocusLost
       if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS9.setText(Double.toString(Double.parseDouble(gddNS0.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS9FocusLost

    private void gddNS10FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS10FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS10.setText(Double.toString(Double.parseDouble(gddNS10.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS10FocusLost

    private void gddNS11FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS11FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS11.setText(Double.toString(Double.parseDouble(gddNS11.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS11FocusLost

    private void gddNS12FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS12FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS12.setText(Double.toString(Double.parseDouble(gddNS12.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS12FocusLost

    private void gddNS13FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS13FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS13.setText(Double.toString(Double.parseDouble(gddNS13.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS13FocusLost

    private void gddNS14FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS14FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS14.setText(Double.toString(Double.parseDouble(gddNS14.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS14FocusLost

    private void gddNS15FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS15FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS15.setText(Double.toString(Double.parseDouble(gddNS15.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS15FocusLost

    private void gddNS16FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS16FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS16.setText(Double.toString(Double.parseDouble(gddNS16.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS16FocusLost

    private void gddNS17FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS17FocusLost
       if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS17.setText(Double.toString(Double.parseDouble(gddNS17.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS17FocusLost

    private void gddNS18FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS18FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS18.setText(Double.toString(Double.parseDouble(gddNS18.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS18FocusLost

    private void gddNS19FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS19FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS19.setText(Double.toString(Double.parseDouble(gddNS19.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS19FocusLost

    private void gddS0FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS0FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS0.setText(Double.toString(Double.parseDouble(gddS0.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS0FocusLost

    private void gddS1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS1FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS1.setText(Double.toString(Double.parseDouble(gddS1.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS1FocusLost

    private void gddS2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS2FocusLost
 if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS2.setText(Double.toString(Double.parseDouble(gddS2.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS2FocusLost

    private void gddS3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS3FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS3.setText(Double.toString(Double.parseDouble(gddS3.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS3FocusLost

    private void gddS4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS4FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS4.setText(Double.toString(Double.parseDouble(gddS4.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS4FocusLost

    private void gddS5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS5FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS5.setText(Double.toString(Double.parseDouble(gddS5.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS5FocusLost

    private void gddS6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS6FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS6.setText(Double.toString(Double.parseDouble(gddS6.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS6FocusLost

    private void gddS7FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS7FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS7.setText(Double.toString(Double.parseDouble(gddS7.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS7FocusLost

    private void gddS8FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS8FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS8.setText(Double.toString(Double.parseDouble(gddS8.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS8FocusLost

    private void gddS9FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS9FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS9.setText(Double.toString(Double.parseDouble(gddS9.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS9FocusLost

    private void gddS10FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS10FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS10.setText(Double.toString(Double.parseDouble(gddS10.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS10FocusLost

    private void gddS11FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS11FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS11.setText(Double.toString(Double.parseDouble(gddS11.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS11FocusLost

    private void gddS12FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS12FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS12.setText(Double.toString(Double.parseDouble(gddS12.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS12FocusLost

    private void gddS13FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS13FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS13.setText(Double.toString(Double.parseDouble(gddS13.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS13FocusLost

    private void gddS14FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS14FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS14.setText(Double.toString(Double.parseDouble(gddS14.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS14FocusLost

    private void gddS15FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS15FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS15.setText(Double.toString(Double.parseDouble(gddS15.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS15FocusLost

    private void gddS16FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS16FocusLost
       if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS16.setText(Double.toString(Double.parseDouble(gddS16.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS16FocusLost

    private void gddS17FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS17FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS17.setText(Double.toString(Double.parseDouble(gddS17.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS17FocusLost

    private void gddS18FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS18FocusLost
        if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS18.setText(Double.toString(Double.parseDouble(gddS18.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS18FocusLost

    private void gddS19FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddS19FocusLost
       if (Double.parseDouble(phyllochron.getText()) > 0){
            nolS19.setText(Double.toString(Double.parseDouble(gddS19.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddS19FocusLost

    private void gddNS3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gddNS3FocusLost
       if (Double.parseDouble(phyllochron.getText()) > 0){
            nolNS3.setText(Double.toString(Double.parseDouble(gddNS3.getText()) / Double.parseDouble(phyllochron.getText())));
        }
    }//GEN-LAST:event_gddNS3FocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");

        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e) {
        
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addCrop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCropType;
    private javax.swing.JRadioButton Automate;
    private javax.swing.JRadioButton DIY;
    private javax.swing.JTextField P1D;
    private javax.swing.JTextField P1DT;
    private javax.swing.JButton addCropVariety;
    private javax.swing.ButtonGroup automateSelection;
    private javax.swing.JTextField bTemp;
    private javax.swing.JTextField baseTempField;
    private javax.swing.JTextField canopyHt;
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JTextField columnName0;
    private javax.swing.JTextField columnName1;
    private javax.swing.JTextField columnName10;
    private javax.swing.JTextField columnName11;
    private javax.swing.JTextField columnName12;
    private javax.swing.JTextField columnName13;
    private javax.swing.JTextField columnName14;
    private javax.swing.JTextField columnName15;
    private javax.swing.JTextField columnName16;
    private javax.swing.JTextField columnName17;
    private javax.swing.JTextField columnName18;
    private javax.swing.JTextField columnName19;
    private javax.swing.JTextField columnName2;
    private javax.swing.JLabel columnName20;
    private javax.swing.JLabel columnName21;
    private javax.swing.JLabel columnName22;
    private javax.swing.JLabel columnName23;
    private javax.swing.JLabel columnName24;
    private javax.swing.JLabel columnName25;
    private javax.swing.JLabel columnName26;
    private javax.swing.JLabel columnName27;
    private javax.swing.JLabel columnName28;
    private javax.swing.JLabel columnName29;
    private javax.swing.JTextField columnName3;
    private javax.swing.JLabel columnName30;
    private javax.swing.JLabel columnName31;
    private javax.swing.JLabel columnName32;
    private javax.swing.JLabel columnName33;
    private javax.swing.JLabel columnName34;
    private javax.swing.JLabel columnName35;
    private javax.swing.JLabel columnName36;
    private javax.swing.JLabel columnName37;
    private javax.swing.JLabel columnName38;
    private javax.swing.JLabel columnName39;
    private javax.swing.JTextField columnName4;
    private javax.swing.JTextField columnName5;
    private javax.swing.JTextField columnName6;
    private javax.swing.JTextField columnName7;
    private javax.swing.JTextField columnName8;
    private javax.swing.JTextField columnName9;
    private javax.swing.JTextField cropDateField;
    private javax.swing.JLabel cropTable;
    private javax.swing.JComboBox cropType;
    private javax.swing.JTextField cropTypeField;
    private javax.swing.JTextField cropVarietyField;
    private javax.swing.JTextField dTemp;
    private javax.swing.JTextField depthField;
    private javax.swing.JTextField ergddField;
    private javax.swing.JTextField ergddField1;
    private javax.swing.JTextField ergddField2;
    private javax.swing.JTextField ergddField3;
    private javax.swing.JLabel ergddLabel;
    private javax.swing.JLabel ergddLabel1;
    private javax.swing.JLabel ergddLabel2;
    private javax.swing.JLabel ergddLabel3;
    private javax.swing.JTextField gddField;
    private javax.swing.JTextField gddLeafField;
    private javax.swing.JTextField gddMethod;
    private javax.swing.JTextField gddNS0;
    private javax.swing.JTextField gddNS1;
    private javax.swing.JTextField gddNS10;
    private javax.swing.JTextField gddNS11;
    private javax.swing.JTextField gddNS12;
    private javax.swing.JTextField gddNS13;
    private javax.swing.JTextField gddNS14;
    private javax.swing.JTextField gddNS15;
    private javax.swing.JTextField gddNS16;
    private javax.swing.JTextField gddNS17;
    private javax.swing.JTextField gddNS18;
    private javax.swing.JTextField gddNS19;
    private javax.swing.JTextField gddNS2;
    private javax.swing.JTextField gddNS3;
    private javax.swing.JTextField gddNS4;
    private javax.swing.JTextField gddNS5;
    private javax.swing.JTextField gddNS6;
    private javax.swing.JTextField gddNS7;
    private javax.swing.JTextField gddNS8;
    private javax.swing.JTextField gddNS9;
    private javax.swing.JTextField gddS0;
    private javax.swing.JTextField gddS1;
    private javax.swing.JTextField gddS10;
    private javax.swing.JTextField gddS11;
    private javax.swing.JTextField gddS12;
    private javax.swing.JTextField gddS13;
    private javax.swing.JTextField gddS14;
    private javax.swing.JTextField gddS15;
    private javax.swing.JTextField gddS16;
    private javax.swing.JTextField gddS17;
    private javax.swing.JTextField gddS18;
    private javax.swing.JTextField gddS19;
    private javax.swing.JTextField gddS2;
    private javax.swing.JTextField gddS3;
    private javax.swing.JTextField gddS4;
    private javax.swing.JTextField gddS5;
    private javax.swing.JTextField gddS6;
    private javax.swing.JTextField gddS7;
    private javax.swing.JTextField gddS8;
    private javax.swing.JTextField gddS9;
    private javax.swing.JTextField germgddField;
    private javax.swing.JTextField germgddField1;
    private javax.swing.JTextField germgddField2;
    private javax.swing.JTextField germgddField3;
    private javax.swing.JLabel germgddLabel;
    private javax.swing.JLabel germgddLabel1;
    private javax.swing.JLabel germgddLabel2;
    private javax.swing.JLabel germgddLabel3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField loTemp;
    private javax.swing.JTextField loTempField;
    private javax.swing.JTextField mTemp;
    private javax.swing.JTextField maxCanopyField;
    private javax.swing.JTextField nDays;
    private javax.swing.JTextField nolNS0;
    private javax.swing.JTextField nolNS1;
    private javax.swing.JTextField nolNS10;
    private javax.swing.JTextField nolNS11;
    private javax.swing.JTextField nolNS12;
    private javax.swing.JTextField nolNS13;
    private javax.swing.JTextField nolNS14;
    private javax.swing.JTextField nolNS15;
    private javax.swing.JTextField nolNS16;
    private javax.swing.JTextField nolNS17;
    private javax.swing.JTextField nolNS18;
    private javax.swing.JTextField nolNS19;
    private javax.swing.JTextField nolNS2;
    private javax.swing.JTextField nolNS3;
    private javax.swing.JTextField nolNS4;
    private javax.swing.JTextField nolNS5;
    private javax.swing.JTextField nolNS6;
    private javax.swing.JTextField nolNS7;
    private javax.swing.JTextField nolNS8;
    private javax.swing.JTextField nolNS9;
    private javax.swing.JTextField nolS0;
    private javax.swing.JTextField nolS1;
    private javax.swing.JTextField nolS10;
    private javax.swing.JTextField nolS11;
    private javax.swing.JTextField nolS12;
    private javax.swing.JTextField nolS13;
    private javax.swing.JTextField nolS14;
    private javax.swing.JTextField nolS15;
    private javax.swing.JTextField nolS16;
    private javax.swing.JTextField nolS17;
    private javax.swing.JTextField nolS18;
    private javax.swing.JTextField nolS19;
    private javax.swing.JTextField nolS2;
    private javax.swing.JTextField nolS3;
    private javax.swing.JTextField nolS4;
    private javax.swing.JTextField nolS5;
    private javax.swing.JTextField nolS6;
    private javax.swing.JTextField nolS7;
    private javax.swing.JTextField nolS8;
    private javax.swing.JTextField nolS9;
    private javax.swing.JTextField phyllochron;
    private javax.swing.JTextField rateField;
    private javax.swing.JComboBox smField;
    private javax.swing.JLabel status;
    private javax.swing.JLabel status1;
    private javax.swing.JTextField umTempField;
    private javax.swing.JTextField uoTemp;
    private javax.swing.JTextField uoTempField;
    private javax.swing.JTextField wfpsloField;
    private javax.swing.JTextField wfpsloField1;
    private javax.swing.JTextField wfpsloField2;
    private javax.swing.JTextField wfpsloField3;
    private javax.swing.JLabel wfpsloLabel;
    private javax.swing.JLabel wfpsloLabel1;
    private javax.swing.JLabel wfpsloLabel2;
    private javax.swing.JLabel wfpsloLabel3;
    private javax.swing.JTextField wfpsupField;
    private javax.swing.JTextField wfpsupField1;
    private javax.swing.JTextField wfpsupField2;
    private javax.swing.JTextField wfpsupField3;
    private javax.swing.JLabel wfpsupLabel;
    private javax.swing.JLabel wfpsupLabel1;
    private javax.swing.JLabel wfpsupLabel2;
    private javax.swing.JLabel wfpsupLabel3;
    // End of variables declaration//GEN-END:variables

    /**********************************************************************
    * The date field is very specific and needs to be formatted appropriately
    * for the database.  This sections check for appropriate format and verifies
    * the user isn't putting in a date beyond the current date.
    ***********************************************************************/
    public boolean dateFormatCheck(String date[]){
        boolean error = false;
        //Checking Month to make sure it's a valid number
        try{
            if ((Integer.parseInt(date[0]) < 0 || Integer.parseInt(date[0]) > 13)  && error == false){
                JOptionPane.showMessageDialog(rootPane, "Error 4000.00: Please Input A Valid Planting Date Month", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
            if ((date[0].length() < 2 || date[0].length() > 2)  && error == false){
                JOptionPane.showMessageDialog(rootPane, "Error 4000.01: Please Input A Valid Planting Date Month | Example Format for January = 01", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(HeadlessException | NumberFormatException e){
            JOptionPane.showMessageDialog(rootPane, "Error 4000.02: Invalid Number for Month, no Characters", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
            error = true;
        }
        //Checking Day to make sure it's a valid number
        try{
            if (((Integer.parseInt(date[1]) < 0 || Integer.parseInt(date[1]) > 31)) && error == false){
                JOptionPane.showMessageDialog(rootPane, "Error 4000.03: Please Input A Valid Planting Date Day", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
            if ((date[1].length() < 2 || date[1].length() > 2) && error == false){
                JOptionPane.showMessageDialog(rootPane, "Error 4000.04: Please Input A Valid Planting Date Month | Example Format 01, for the 1st day of a month", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(HeadlessException | NumberFormatException er){
            JOptionPane.showMessageDialog(rootPane, "Error 4000.05: Invalid Number for Day, no Characters", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
            error = true;
        }
        //Checking Year to make sure it's a valid number
        try{
            if (((Integer.parseInt(date[2]) < 1900 || Integer.parseInt(date[2]) > Calendar.getInstance().get(Calendar.YEAR))) && error == false){
                JOptionPane.showMessageDialog(rootPane, "Error 4000.06: Please Input A Valid Planting Date Year", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
            if ((date[2].length() < 4 || date[2].length() > 4) && error == false){
                JOptionPane.showMessageDialog(rootPane, "Error 4000.07: Please Input A Valid Planting Date Year | Example Format 1999, 2001, 2011, etc.", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(HeadlessException | NumberFormatException err){
            JOptionPane.showMessageDialog(rootPane, "Error 4000.08: Invalid Number for Year, no Characters", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
            error = true;
        }
        
        //Checking to make sure the date entered is not beyond today's date
        try{

            if (Integer.parseInt(date[0])-1 >= Calendar.getInstance().get(Calendar.MONTH)){
                if(Integer.parseInt(date[2]) >= Calendar.getInstance().get(Calendar.YEAR))
                    if(Integer.parseInt(date[1]) > Calendar.getInstance().get(Calendar.DAY_OF_MONTH)){
                        JOptionPane.showMessageDialog(rootPane, "Error 4000.09: Please Input A Valid Planting Date Year | You are inserting a date beyond current date", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
                        error = true;
                    }
            }
        }catch (Exception errr){
            JOptionPane.showMessageDialog(rootPane, "Error 4000.10: Invalid Number for Year, no Characters", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
            error = true;
        }
        return error;
    }
    
    /**********************************************************************
    * Checking to make sure the Plant Information was formatted appropriately
    * and making sure that the users didn't miss any fields.
    ***********************************************************************/
    public boolean PlantInformationErrorChecking(){
        String cropDateCheck[];
        Boolean error = false;
        
        //Checking Crop Name
        if (cropTypeField.getText().replaceAll("\\s+","").length() == 0){
            JOptionPane.showMessageDialog(rootPane, "Error 4001: Please Input A Valid Crop Name", "Crop Name Error", JOptionPane.ERROR_MESSAGE);
            error = true;
        }
        
        //Checking Date Fields for inappropriate slash
        if (cropDateField.getText().contains("\\")){
            JOptionPane.showMessageDialog(rootPane, "Error 4000.11: Please Use Appropriate Slash \"/\"", "Planting Date Error", JOptionPane.ERROR_MESSAGE);
            error = true;
        }
        
        cropDateCheck = cropDateField.getText().split("/");
        
        error = dateFormatCheck(cropDateCheck);
        

        //Checking the Depth Field
        try{
            if(depthField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(depthField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4002.1: Please Input A Valid Planting Depth", "Planting Depth Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception err){
           JOptionPane.showMessageDialog(rootPane, "Error 4002.2: Invalid Number for Depth, no Characters", "Planting Depth Error", JOptionPane.ERROR_MESSAGE);
           error = true;
        }
        
        //Checking the Rate Field
        try{
            if (rateField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(rateField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4003.1: Please Input A Valid Rate", "Seeding Rate Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
           JOptionPane.showMessageDialog(rootPane, "Error4003.2: Invalid Number for Rate, no Characters", "Seeding Rate Error", JOptionPane.ERROR_MESSAGE); 
           error = true;
        }
        
        //Checking the Max Canopy Ht Field
        try{
            if (maxCanopyField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(maxCanopyField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4004.1: Please Input A Valid Max Canopy Height", "Max Canopy Height Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }                
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4004.2: Invalid Number for Max Canopy Height, no Characters", "Max Canopy Height Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        
        //Checking the Base Temp. Field
        try{
            if (baseTempField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(baseTempField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error  4005.1: Please Input A Valid Base Temperature", "Base Temp. Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4005.2: Invalid Number for Base Temp., no Characters", "Base Temp. Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        
        //Checking the Lower Optimum Temp Field
        try{
            if (loTempField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(loTempField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4006.1: Please Input A Valid Rate", "Planting Depth Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4006.2: Invalid Number for Planting Number, no Characters", "Planting Depth Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        
        //Checking the Upper Optimum Temp. Field
        try{
           if (uoTempField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(uoTempField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4007.1: Please Input A Valid Optimum Temp", "Optimum Temp Error", JOptionPane.ERROR_MESSAGE);
                error = true;
           }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4007.2: Invalid Number for Optimum Temp, no Characters", "Optimum Temp Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        
        //Checking the Upper/Max Temp. Field
        try{
            if (umTempField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(umTempField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4008.1: Please Input A Valid Upper/Max Temp.", "Upper/Max Temp. Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4008.2: Invalid Number for Upper/Max Temp., no Characters", "Upper/Max Temp. Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        
        //Checking the GDD Method Field
        try{
            if (gddField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(gddField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4009.1: Please Input A Valid GDD Method", "GDD Method Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4009.2: Invalid Number for GDD Method, no Characters", "GDD Method Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        
        //Checking the GDD/Leaf Field
        try{
            if (gddLeafField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(gddLeafField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4010.1: Please Input A Valid GDD/Leaf", "GDD/Leaf Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4010.2: Invalid Number for GDD/Leaf, no Characters", "GDD/Leaf Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        
        /*********************************************************************************
        *   Checking the Optimized, Medium, Dry, and Planted in Dust Values below this
        *   point.
        **********************************************************************************/
        //Checking wfpsloField for Optimized
        try{
            if (wfpsloField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(wfpsloField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.1: Please Input A Valid wfpslo Field", "Optimized Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.2: Invalid Number for wfpslo Field, no Characters", "Optimized Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking wfpsupField for Optimized
        try{
            if (wfpsupField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(wfpsupField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.3: Please Input A Valid wfpsup Field", "Optimized Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.4: Invalid Number for wfpsup Field, no Characters", "Optimized Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking germgddField for Optimized
        try{
            if (germgddField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(germgddField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.5: Please Input A Valid germgdd Field", "Optimized Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.6: Invalid Number for germgdd Field, no Characters", "Optimized Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking ergddField for Optimized
        try{
            if (ergddField.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(ergddField.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.7: Please Input A Valid ergdd Field", "Optimized Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.8: Invalid Number for ergdd Field, no Characters", "Optimized Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        

        //Checking wfpsloField for Medium
        try{
            if (wfpsloField1.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(wfpsloField1.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.9: Please Input A Valid wfpslo Field", "Medium Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.10: Invalid Number for wfpslo Field, no Characters", "Medium Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking wfpsupField for Medium
        try{
            if (wfpsupField1.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(wfpsupField1.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.11: Please Input A Valid wfpsup Field", "Medium Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.12: Invalid Number for wfpsup Field, no Characters", "Medium Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking germgddField for Medium
        try{
            if (germgddField1.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(germgddField1.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.13: Please Input A Valid germgdd Field", "Medium Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.14: Invalid Number for germgdd Field, no Characters", "Medium Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking ergddField for Medium
        try{
            if (ergddField1.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(ergddField1.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.15: Please Input A Valid ergdd Field", "Medium Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.16: Invalid Number for ergdd Field, no Characters", "Medium Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        
         //Checking wfpsloField for Dry
        try{
            if (wfpsloField2.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(wfpsloField2.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.17: Please Input A Valid wfpslo Field", "Dry Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.18: Invalid Number for wfpslo Field, no Characters", "Dry Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking wfpsupField for Dry
        try{
            if (wfpsupField2.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(wfpsupField2.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.19: Please Input A Valid wfpsup Field", "Dry Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.20: Invalid Number for wfpsup Field, no Characters", "Dry Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking germgddField for Dry
        try{
            if (germgddField2.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(germgddField2.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.21: Please Input A Valid germgdd Field", "Dry Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.22: Invalid Number for germgdd Field, no Characters", "Dry Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking ergddField for Dry
        try{
            if (ergddField2.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(ergddField2.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.23: Please Input A Valid ergdd Field", "Dry Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.24: Invalid Number for ergdd Field, no Characters", "Dry Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
   
        //Checking wfpsloField for Planted In Dust
        try{
            if (wfpsloField3.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(wfpsloField3.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.25: Please Input A Valid wfpslo Field", "Planted In Dust Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.26: Invalid Number for wfpslo Field, no Characters", "Planted In Dust Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking wfpsupField for Planted In Dust
        try{
            if (wfpsupField3.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(wfpsupField3.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.27: Please Input A Valid wfpsup Field", "Planted In Dust Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.28: Invalid Number for wfpsup Field, no Characters", "Planted In Dust Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking germgddField for Planted In Dust
        try{
            if (germgddField3.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(germgddField3.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.29: Please Input A Valid germgdd Field", "Planted In Dust Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.30: Invalid Number for germgdd Field, no Characters", "Planted In Dust Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        //Checking ergddField for Planted In Dust
        try{
            if (ergddField3.getText().replaceAll("\\s+","").length() == 0 || Double.parseDouble(ergddField3.getText()) == 0){
                JOptionPane.showMessageDialog(rootPane, "Error 4011.31: Please Input A Valid ergdd Field", "Planted In Dust Data Error", JOptionPane.ERROR_MESSAGE);
                error = true;
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(rootPane, "Error 4011.32: Invalid Number for ergdd Field, no Characters", "Planted In Dust Data Error", JOptionPane.ERROR_MESSAGE); 
            error = true;
        }
        
        
        
        
        if (GrowthStageCheck())
            error = true;
        
            
   
        return error;
    }
    
    
    /**********************************************************************
    *Checking to make sure the growth stages were in the right place and
    * that there is at least 5
    ***********************************************************************/
    public boolean GrowthStageCheck(){
        int count = 0;
        boolean gsError = false;
        
       
        
        if (columnName0.getText().length() > 0)
            count ++;
        if (columnName1.getText().length() > 0)
            count ++;
        if (columnName2.getText().length() > 0)
            count ++;
        if (columnName3.getText().length() > 0)
            count ++;
        if (columnName4.getText().length() > 0)
            count ++;
        if (columnName5.getText().length() > 0)
            count ++;
        if (columnName6.getText().length() > 0)
            count ++;
        if (columnName7.getText().length() > 0)
            count ++;
        if (columnName8.getText().length() > 0)
            count ++;
        if (columnName9.getText().length() > 0)
            count ++;
        if (columnName10.getText().length() > 0)
            count ++;
        if (columnName11.getText().length() > 0)
            count ++;
        if (columnName12.getText().length() > 0)
            count ++;
        if (columnName13.getText().length() > 0)
            count ++;
        if (columnName14.getText().length() > 0)
            count ++;
        if (columnName15.getText().length() > 0)
            count ++;
        if (columnName16.getText().length() > 0)
            count ++;
        if (columnName17.getText().length() > 0)
            count ++;
        if (columnName18.getText().length() > 0)
            count ++;
        if (columnName19.getText().length() > 0)
            count ++;

        if (count < 5 && !gsError){
            JOptionPane.showMessageDialog(rootPane, "Error 4012.1: You don't have enough Growth Stages filled, Please Provide at least 5 Growth Stages in order of growth", "GDD Error", JOptionPane.ERROR_MESSAGE);
            gsError = true;
        }else if (count >= 5 && !gsError){
            if (columnName0.getText().length() == 0  || columnName1.getText().length() == 0 || columnName2.getText().length() == 0 || 
                columnName3.getText().length() == 0 || columnName4.getText().length() == 0){
                    JOptionPane.showMessageDialog(rootPane, "Error 4012.2: You have enough Growth Stages filled, but Please Provide 5 Growth Stages in order of growth", "GDD Error", JOptionPane.ERROR_MESSAGE);
                    gsError = true;
            }
        }
        return gsError;
    }

    
    /**********************************************************************
    * Getting growth stage information for database
    * 
     * @return 
    ***********************************************************************/
    public List <String> getGrowthStageValues(){
        List <String> growthStageAnswers = new ArrayList();
        
        for (int i = 0; i < 4; i++){
            if (columnName20.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS0.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS0.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS0.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS0.getText());
            }
            if (columnName21.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS1.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS1.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS1.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS1.getText());
            }
            if (columnName22.isEnabled()){
               if (i == 0)
                    growthStageAnswers.add(gddNS2.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS2.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS2.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS2.getText());
            }
            if (columnName23.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS3.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS3.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS3.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS3.getText());
            }
            if (columnName24.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS4.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS4.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS4.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS4.getText());
            }
            if (columnName25.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS5.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS5.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS5.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS5.getText());
            }
            if (columnName26.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS6.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS6.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS6.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS6.getText());
            }
            if (columnName27.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS7.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS7.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS7.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS7.getText());
            }
            if (columnName28.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS8.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS8.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS8.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS8.getText());
            }
            if (columnName29.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS9.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS9.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS9.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS9.getText());;
            }
            if (columnName30.isEnabled()){
               if (i == 0)
                    growthStageAnswers.add(gddNS10.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS10.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS10.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS10.getText());
            }
            if (columnName31.isEnabled()){
               if (i == 0)
                    growthStageAnswers.add(gddNS11.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS11.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS11.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS11.getText());
            }
            if (columnName32.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS12.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS12.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS12.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS12.getText());
            }
            if (columnName33.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS13.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS13.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS13.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS13.getText());
            }
            if (columnName34.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS14.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS14.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS14.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS14.getText());
            }
            if (columnName35.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS15.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS15.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS15.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS15.getText());
            }
            if (columnName36.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS16.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS16.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS16.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS16.getText());
            }
            if (columnName37.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS17.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS17.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS17.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS17.getText());
            }
            if (columnName38.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS18.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS18.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS18.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS18.getText());
            }
            if (columnName39.isEnabled()){
                if (i == 0)
                    growthStageAnswers.add(gddNS19.getText());
                else if (i == 1)
                    growthStageAnswers.add(gddS19.getText());
                else if (i == 2)
                    growthStageAnswers.add(nolNS19.getText());
                else if (i == 3)
                    growthStageAnswers.add(nolS19.getText());
            }
        }
        
        growthStageAnswers.add(nDays.getText());
        growthStageAnswers.add(bTemp.getText());
        growthStageAnswers.add(loTemp.getText());
        growthStageAnswers.add(uoTemp.getText());
        growthStageAnswers.add(mTemp.getText());
        growthStageAnswers.add(dTemp.getText());
        growthStageAnswers.add(gddMethod.getText());
        growthStageAnswers.add(P1D.getText());
        growthStageAnswers.add(P1DT.getText());
        growthStageAnswers.add(canopyHt.getText());
        if (phyllochron.getText().replaceAll("\\s+","").length() > 0)
            growthStageAnswers.add(phyllochron.getText());
        else 
            growthStageAnswers.add("1");
                
        growthStageAnswers.add(0,cropVarietyField.getText());
        
        if (growthStages.get(0).split("_")[0].contains("GDD") && growthStages.get(0).split("_")[1].contains("NS"))
            growthStages.add(0, CropType.get(1).substring(0, CropType.get(1).length()-1));
        
        return growthStageAnswers;
    }
    public void setGrowthStageNames(List <String> gs){
        int size = 0;
        String check[] = {};
       
       enableGrowthStages(); 
        
        for(int i = 0; i < gs.size(); i++){
            check = gs.get(i).split("_");
            if (check[0].equalsIgnoreCase("GDD") && check[1].equalsIgnoreCase("NS")){
                size ++;
                if (i == 0)
                    columnName20.setText(gs.get(i).split("_")[2]);
                if (i == 1)
                    columnName21.setText(gs.get(i).split("_")[2]);
                if (i == 2)
                    columnName22.setText(gs.get(i).split("_")[2]);
                if (i == 3)
                    columnName23.setText(gs.get(i).split("_")[2]);
                if (i == 4)
                    columnName24.setText(gs.get(i).split("_")[2]);
                if (i == 5)
                    columnName25.setText(gs.get(i).split("_")[2]);
                if (i == 6)
                    columnName26.setText(gs.get(i).split("_")[2]);
                if (i == 7)
                    columnName27.setText(gs.get(i).split("_")[2]);
                if (i == 8)
                    columnName28.setText(gs.get(i).split("_")[2]);
                if (i == 9)
                    columnName29.setText(gs.get(i).split("_")[2]);
                if (i == 10)
                    columnName30.setText(gs.get(i).split("_")[2]);
                if (i == 11)
                    columnName31.setText(gs.get(i).split("_")[2]);
                if (i == 12)
                    columnName32.setText(gs.get(i).split("_")[2]);
                if (i == 13)
                    columnName33.setText(gs.get(i).split("_")[2]);
                if (i == 14)
                    columnName34.setText(gs.get(i).split("_")[2]);
                if (i == 15)
                    columnName35.setText(gs.get(i).split("_")[2]);
                if (i == 16)
                    columnName36.setText(gs.get(i).split("_")[2]);
                if (i == 17)
                    columnName37.setText(gs.get(i).split("_")[2]);
                if (i == 18)
                    columnName38.setText(gs.get(i).split("_")[2]);
                if (i == 19)
                    columnName39.setText(gs.get(i).split("_")[2]);
            }
        }
        disableGrowthStages(size);
        
    }
    public void enableGrowthStages(){
        columnName20.setText(null);
        columnName21.setText(null);
        columnName22.setText(null);
        columnName23.setText(null);
        columnName24.setText(null);
        columnName25.setText(null);
        columnName26.setText(null);
        columnName27.setText(null);
        columnName28.setText(null);
        columnName29.setText(null);
        columnName30.setText(null);
        columnName31.setText(null);
        columnName32.setText(null);
        columnName33.setText(null);
        columnName34.setText(null);
        columnName35.setText(null);
        columnName36.setText(null);
        columnName37.setText(null);
        columnName38.setText(null);
        columnName39.setText(null);
        
        columnName20.setEnabled(true);
        columnName21.setEnabled(true);
        columnName22.setEnabled(true);
        columnName23.setEnabled(true);
        columnName24.setEnabled(true);
        columnName25.setEnabled(true);
        columnName26.setEnabled(true);
        columnName27.setEnabled(true);
        columnName28.setEnabled(true);
        columnName29.setEnabled(true);
        columnName30.setEnabled(true);
        columnName31.setEnabled(true);
        columnName32.setEnabled(true);
        columnName33.setEnabled(true);
        columnName34.setEnabled(true);
        columnName35.setEnabled(true);
        columnName36.setEnabled(true);
        columnName37.setEnabled(true);
        columnName38.setEnabled(true);
        columnName39.setEnabled(true);
         
        gddNS19.setEnabled(true);
        gddS19.setEnabled(true);
        nolNS19.setEnabled(true);
        nolS19.setEnabled(true);
        
        gddNS18.setEnabled(true);
        gddS18.setEnabled(true);
        nolNS18.setEnabled(true);
        nolS18.setEnabled(true);

        gddNS17.setEnabled(true);
        gddS17.setEnabled(true);
        nolNS17.setEnabled(true);
        nolS17.setEnabled(true);
        
        gddNS16.setEnabled(true);
        gddS16.setEnabled(true);
        nolNS16.setEnabled(true);
        nolS16.setEnabled(true);
 
        gddNS15.setEnabled(true);
        gddS15.setEnabled(true);
        nolNS15.setEnabled(true);
        nolS15.setEnabled(true);
        
        gddNS14.setEnabled(true);
        gddS14.setEnabled(true);
        nolNS14.setEnabled(true);
        nolS14.setEnabled(true);      
        
        gddNS13.setEnabled(true);
        gddS13.setEnabled(true);
        nolNS13.setEnabled(true);
        nolS13.setEnabled(true);       

        gddNS12.setEnabled(true);
        gddS12.setEnabled(true);
        nolNS12.setEnabled(true);
        nolS12.setEnabled(true);

        gddNS11.setEnabled(true);
        gddS11.setEnabled(true);
        nolNS11.setEnabled(true);
        nolS11.setEnabled(true);

        gddNS10.setEnabled(true);
        gddS10.setEnabled(true);
        nolNS10.setEnabled(true);
        nolS10.setEnabled(true);

        gddNS9.setEnabled(true);
        gddS9.setEnabled(true);
        nolNS9.setEnabled(true);
        nolS9.setEnabled(true);
        
        gddNS8.setEnabled(true);
        gddS8.setEnabled(true);
        nolNS8.setEnabled(true);
        nolS8.setEnabled(true);

        gddNS7.setEnabled(true);
        gddS7.setEnabled(true);
        nolNS7.setEnabled(true);
        nolS7.setEnabled(true);

        gddNS6.setEnabled(true);
        gddS6.setEnabled(true);
        nolNS6.setEnabled(true);
        nolS6.setEnabled(true);

        gddNS5.setEnabled(true);
        gddS5.setEnabled(true);
        nolNS5.setEnabled(true);
        nolS5.setEnabled(true);
        
        
    }
    public void disableGrowthStages(int size){
        for (int i = 19; i > size-1; i--){
            if (i == 19){
                columnName39.setEnabled(false);
                gddNS19.setEnabled(false);
                gddS19.setEnabled(false);
                nolNS19.setEnabled(false);
                nolS19.setEnabled(false);
            }
            if (i == 18){
                columnName38.setEnabled(false);
                gddNS18.setEnabled(false);
                gddS18.setEnabled(false);
                nolNS18.setEnabled(false);
                nolS18.setEnabled(false);
            }
            if (i == 17){
                columnName37.setEnabled(false);
                gddNS17.setEnabled(false);
                gddS17.setEnabled(false);
                nolNS17.setEnabled(false);
                nolS17.setEnabled(false);
            }
            if (i == 16){
                columnName36.setEnabled(false);
                gddNS16.setEnabled(false);
                gddS16.setEnabled(false);
                nolNS16.setEnabled(false);
                nolS16.setEnabled(false);
            }
            if (i == 15){
                columnName35.setEnabled(false);
                gddNS15.setEnabled(false);
                gddS15.setEnabled(false);
                nolNS15.setEnabled(false);
                nolS15.setEnabled(false);
            }
            if (i == 14){
                columnName34.setEnabled(false);
                gddNS14.setEnabled(false);
                gddS14.setEnabled(false);
                nolNS14.setEnabled(false);
                nolS14.setEnabled(false);
            }
            if (i == 13){
                columnName33.setEnabled(false);
                gddNS13.setEnabled(false);
                gddS13.setEnabled(false);
                nolNS13.setEnabled(false);
                nolS13.setEnabled(false);
            }
            if (i == 12){
                columnName32.setEnabled(false);
                gddNS12.setEnabled(false);
                gddS12.setEnabled(false);
                nolNS12.setEnabled(false);
                nolS12.setEnabled(false);
            }
            if (i == 11){
                columnName31.setEnabled(false);
                gddNS11.setEnabled(false);
                gddS11.setEnabled(false);
                nolNS11.setEnabled(false);
                nolS11.setEnabled(false);
            }
            if (i == 10){
                columnName30.setEnabled(false);
                gddNS10.setEnabled(false);
                gddS10.setEnabled(false);
                nolNS10.setEnabled(false);
                nolS10.setEnabled(false);
            }
            if (i == 9){
                columnName29.setEnabled(false);
                gddNS9.setEnabled(false);
                gddS9.setEnabled(false);
                nolNS9.setEnabled(false);
                nolS9.setEnabled(false);
            }
            if (i == 8){
                columnName28.setEnabled(false);
                gddNS8.setEnabled(false);
                gddS8.setEnabled(false);
                nolNS8.setEnabled(false);
                nolS8.setEnabled(false);
            }
            if (i == 7){
                columnName27.setEnabled(false);
                gddNS7.setEnabled(false);
                gddS7.setEnabled(false);
                nolNS7.setEnabled(false);
                nolS7.setEnabled(false);
            }
            if (i == 6){
                columnName26.setEnabled(false);
                gddNS6.setEnabled(false);
                gddS6.setEnabled(false);
                nolNS6.setEnabled(false);
                nolS6.setEnabled(false);
            }
            if (i == 5){
                columnName25.setEnabled(false);
                gddNS5.setEnabled(false);
                gddS5.setEnabled(false);
                nolNS5.setEnabled(false);
                nolS5.setEnabled(false);
            }
        }
    }
    public boolean checkingInsertedData(){
        boolean error = false;
        
        if (columnName20.isEnabled())
            if (gddNS0.getText().trim().length() == 0 || gddS0.getText().trim().length() == 0 || nolNS0.getText().trim().length() == 0 || nolS0.getText().trim().length() == 0)
                error = true;
        if (columnName21.isEnabled())
            if (gddNS1.getText().trim().length() == 0 || gddS1.getText().trim().length() == 0 || nolNS1.getText().trim().length() == 0 || nolS1.getText().trim().length() == 0)
                error = true;
        if (columnName22.isEnabled())
            if (gddNS2.getText().trim().length() == 0 || gddS2.getText().trim().length() == 0 || nolNS2.getText().trim().length() == 0 || nolS2.getText().trim().length() == 0)
                error = true;
        if (columnName23.isEnabled())
            if (gddNS3.getText().trim().length() == 0 || gddS3.getText().trim().length() == 0 || nolNS3.getText().trim().length() == 0 || nolS3.getText().trim().length() == 0)
                error = true;
        if (columnName24.isEnabled())
            if (gddNS4.getText().trim().length() == 0 || gddS4.getText().trim().length() == 0 || nolNS4.getText().trim().length() == 0 || nolS4.getText().trim().length() == 0)
                error = true;
        if (columnName25.isEnabled())
            if (gddNS5.getText().trim().length() == 0 || gddS5.getText().trim().length() == 0 || nolNS5.getText().trim().length() == 0 || nolS5.getText().trim().length() == 0)
                error = true;
        if (columnName26.isEnabled())
            if (gddNS6.getText().trim().length() == 0 || gddS6.getText().trim().length() == 0 || nolNS6.getText().trim().length() == 0 || nolS6.getText().trim().length() == 0)
                error = true;
        if (columnName27.isEnabled())
            if (gddNS7.getText().trim().length() == 0 || gddS7.getText().trim().length() == 0 || nolNS7.getText().trim().length() == 0 || nolS7.getText().trim().length() == 0)
                error = true;
        if (columnName28.isEnabled())
            if (gddNS8.getText().trim().length() == 0 || gddS8.getText().trim().length() == 0 || nolNS8.getText().trim().length() == 0 || nolS8.getText().trim().length() == 0)
                error = true;
        if (columnName29.isEnabled())
            if (gddNS9.getText().trim().length() == 0 || gddS9.getText().trim().length() == 0 || nolNS9.getText().trim().length() == 0 || nolS9.getText().trim().length() == 0)
                error = true;
        if (columnName30.isEnabled())
            if (gddNS10.getText().trim().length() == 0 || gddS10.getText().trim().length() == 0 || nolNS10.getText().trim().length() == 0 || nolS10.getText().trim().length() == 0)
                error = true;
        if (columnName31.isEnabled())
            if (gddNS11.getText().trim().length() == 0 || gddS11.getText().trim().length() == 0 || nolNS11.getText().trim().length() == 0 || nolS11.getText().trim().length() == 0)
                error = true;
        if (columnName32.isEnabled())
            if (gddNS12.getText().trim().length() == 0 || gddS12.getText().trim().length() == 0 || nolNS12.getText().trim().length() == 0 || nolS12.getText().trim().length() == 0)
                error = true;
        if (columnName33.isEnabled())
            if (gddNS13.getText().trim().length() == 0 || gddS13.getText().trim().length() == 0 || nolNS13.getText().trim().length() == 0 || nolS13.getText().trim().length() == 0)
                error = true;
        if (columnName34.isEnabled())
            if (gddNS14.getText().trim().length() == 0 || gddS14.getText().trim().length() == 0 || nolNS14.getText().trim().length() == 0 || nolS14.getText().trim().length() == 0)
                error = true;
        if (columnName35.isEnabled())
            if (gddNS15.getText().trim().length() == 0 || gddS15.getText().trim().length() == 0 || nolNS15.getText().trim().length() == 0 || nolS15.getText().trim().length() == 0)
                error = true;
        if (columnName36.isEnabled())
            if (gddNS16.getText().trim().length() == 0 || gddS16.getText().trim().length() == 0 || nolNS16.getText().trim().length() == 0 || nolS16.getText().trim().length() == 0)
                error = true;
        if (columnName37.isEnabled())
            if (gddNS17.getText().trim().length() == 0 || gddS17.getText().trim().length() == 0 || nolNS17.getText().trim().length() == 0 || nolS17.getText().trim().length() == 0)
                error = true;
        if (columnName38.isEnabled())
            if (gddNS18.getText().trim().length() == 0 || gddS18.getText().trim().length() == 0 || nolNS18.getText().trim().length() == 0 || nolS18.getText().trim().length() == 0)
                error = true;
        if (columnName39.isEnabled())
            if (gddNS19.getText().trim().length() == 0 || gddS19.getText().trim().length() == 0 || nolNS19.getText().trim().length() == 0 || nolS19.getText().trim().length() == 0)
                error = true;

        if (error){
            JOptionPane.showMessageDialog(rootPane, "Error 4013: All Growth Stage Fields must have a value", "Growth Stage Data Error", JOptionPane.ERROR_MESSAGE);
        }

        //Checking Vernalization Data
        if (nDays.getText().trim().length() == 0 || bTemp.getText().trim().length() == 0 || loTemp.getText().trim().length() == 0 || uoTemp.getText().trim().length() == 0 || mTemp.getText().trim().length() == 0 || dTemp.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(rootPane, "Error 4014: All Vernalization Fields must have a value", "Vernalization Data Error", JOptionPane.ERROR_MESSAGE);
            error = true;
        }
        
        //Checking Additional Data
        if (gddMethod.getText().trim().length() == 0 || P1D.getText().trim().length() == 0 || P1DT.getText().trim().length() == 0 || canopyHt.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(rootPane, "Error 4015: All Additional Data must have a value", "Additional Data Error", JOptionPane.ERROR_MESSAGE);
            error = true;
        }
        
        //Checking for Crop Name
        if (cropVarietyField.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(rootPane, "Error 4016: There must be a Crop Variety Name before a save can occure", "Crop Variety Name Error", JOptionPane.ERROR_MESSAGE);
            error = true;
        }
        return error;
    }
    public void SetDirectory(String directory){
        Directory = directory;
    }
}
